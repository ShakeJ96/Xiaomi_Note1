// Generated by view binder compiler. Do not edit!
package net.micode.notes.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.micode.notes.R;
import net.micode.notes.ui.NoteEditText;

public final class NoteEditBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton addImgBtn;

  @NonNull
  public final ImageView btnSetBgColor;

  @NonNull
  public final LinearLayout fontSizeSelector;

  @NonNull
  public final ImageView ivAlertIcon;

  @NonNull
  public final ImageView ivBgBlue;

  @NonNull
  public final ImageView ivBgBlueSelect;

  @NonNull
  public final ImageView ivBgGreen;

  @NonNull
  public final ImageView ivBgGreenSelect;

  @NonNull
  public final ImageView ivBgRed;

  @NonNull
  public final ImageView ivBgRedSelect;

  @NonNull
  public final ImageView ivBgWhite;

  @NonNull
  public final ImageView ivBgWhiteSelect;

  @NonNull
  public final ImageView ivBgYellow;

  @NonNull
  public final ImageView ivBgYellowSelect;

  @NonNull
  public final ImageView ivLargeSelect;

  @NonNull
  public final ImageView ivMediumSelect;

  @NonNull
  public final ImageView ivSmallSelect;

  @NonNull
  public final ImageView ivSuperSelect;

  @NonNull
  public final FrameLayout llFontLarge;

  @NonNull
  public final FrameLayout llFontNormal;

  @NonNull
  public final FrameLayout llFontSmall;

  @NonNull
  public final FrameLayout llFontSuper;

  @NonNull
  public final LinearLayout noteBgColorSelector;

  @NonNull
  public final LinearLayout noteEditList;

  @NonNull
  public final NoteEditText noteEditView;

  @NonNull
  public final LinearLayout noteTitle;

  @NonNull
  public final LinearLayout svNoteEdit;

  @NonNull
  public final TextView textNum;

  @NonNull
  public final TextView tvAlertDate;

  @NonNull
  public final TextView tvModifiedDate;

  private NoteEditBinding(@NonNull FrameLayout rootView, @NonNull ImageButton addImgBtn,
      @NonNull ImageView btnSetBgColor, @NonNull LinearLayout fontSizeSelector,
      @NonNull ImageView ivAlertIcon, @NonNull ImageView ivBgBlue,
      @NonNull ImageView ivBgBlueSelect, @NonNull ImageView ivBgGreen,
      @NonNull ImageView ivBgGreenSelect, @NonNull ImageView ivBgRed,
      @NonNull ImageView ivBgRedSelect, @NonNull ImageView ivBgWhite,
      @NonNull ImageView ivBgWhiteSelect, @NonNull ImageView ivBgYellow,
      @NonNull ImageView ivBgYellowSelect, @NonNull ImageView ivLargeSelect,
      @NonNull ImageView ivMediumSelect, @NonNull ImageView ivSmallSelect,
      @NonNull ImageView ivSuperSelect, @NonNull FrameLayout llFontLarge,
      @NonNull FrameLayout llFontNormal, @NonNull FrameLayout llFontSmall,
      @NonNull FrameLayout llFontSuper, @NonNull LinearLayout noteBgColorSelector,
      @NonNull LinearLayout noteEditList, @NonNull NoteEditText noteEditView,
      @NonNull LinearLayout noteTitle, @NonNull LinearLayout svNoteEdit, @NonNull TextView textNum,
      @NonNull TextView tvAlertDate, @NonNull TextView tvModifiedDate) {
    this.rootView = rootView;
    this.addImgBtn = addImgBtn;
    this.btnSetBgColor = btnSetBgColor;
    this.fontSizeSelector = fontSizeSelector;
    this.ivAlertIcon = ivAlertIcon;
    this.ivBgBlue = ivBgBlue;
    this.ivBgBlueSelect = ivBgBlueSelect;
    this.ivBgGreen = ivBgGreen;
    this.ivBgGreenSelect = ivBgGreenSelect;
    this.ivBgRed = ivBgRed;
    this.ivBgRedSelect = ivBgRedSelect;
    this.ivBgWhite = ivBgWhite;
    this.ivBgWhiteSelect = ivBgWhiteSelect;
    this.ivBgYellow = ivBgYellow;
    this.ivBgYellowSelect = ivBgYellowSelect;
    this.ivLargeSelect = ivLargeSelect;
    this.ivMediumSelect = ivMediumSelect;
    this.ivSmallSelect = ivSmallSelect;
    this.ivSuperSelect = ivSuperSelect;
    this.llFontLarge = llFontLarge;
    this.llFontNormal = llFontNormal;
    this.llFontSmall = llFontSmall;
    this.llFontSuper = llFontSuper;
    this.noteBgColorSelector = noteBgColorSelector;
    this.noteEditList = noteEditList;
    this.noteEditView = noteEditView;
    this.noteTitle = noteTitle;
    this.svNoteEdit = svNoteEdit;
    this.textNum = textNum;
    this.tvAlertDate = tvAlertDate;
    this.tvModifiedDate = tvModifiedDate;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoteEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoteEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.note_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoteEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_img_btn;
      ImageButton addImgBtn = ViewBindings.findChildViewById(rootView, id);
      if (addImgBtn == null) {
        break missingId;
      }

      id = R.id.btn_set_bg_color;
      ImageView btnSetBgColor = ViewBindings.findChildViewById(rootView, id);
      if (btnSetBgColor == null) {
        break missingId;
      }

      id = R.id.font_size_selector;
      LinearLayout fontSizeSelector = ViewBindings.findChildViewById(rootView, id);
      if (fontSizeSelector == null) {
        break missingId;
      }

      id = R.id.iv_alert_icon;
      ImageView ivAlertIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivAlertIcon == null) {
        break missingId;
      }

      id = R.id.iv_bg_blue;
      ImageView ivBgBlue = ViewBindings.findChildViewById(rootView, id);
      if (ivBgBlue == null) {
        break missingId;
      }

      id = R.id.iv_bg_blue_select;
      ImageView ivBgBlueSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivBgBlueSelect == null) {
        break missingId;
      }

      id = R.id.iv_bg_green;
      ImageView ivBgGreen = ViewBindings.findChildViewById(rootView, id);
      if (ivBgGreen == null) {
        break missingId;
      }

      id = R.id.iv_bg_green_select;
      ImageView ivBgGreenSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivBgGreenSelect == null) {
        break missingId;
      }

      id = R.id.iv_bg_red;
      ImageView ivBgRed = ViewBindings.findChildViewById(rootView, id);
      if (ivBgRed == null) {
        break missingId;
      }

      id = R.id.iv_bg_red_select;
      ImageView ivBgRedSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivBgRedSelect == null) {
        break missingId;
      }

      id = R.id.iv_bg_white;
      ImageView ivBgWhite = ViewBindings.findChildViewById(rootView, id);
      if (ivBgWhite == null) {
        break missingId;
      }

      id = R.id.iv_bg_white_select;
      ImageView ivBgWhiteSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivBgWhiteSelect == null) {
        break missingId;
      }

      id = R.id.iv_bg_yellow;
      ImageView ivBgYellow = ViewBindings.findChildViewById(rootView, id);
      if (ivBgYellow == null) {
        break missingId;
      }

      id = R.id.iv_bg_yellow_select;
      ImageView ivBgYellowSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivBgYellowSelect == null) {
        break missingId;
      }

      id = R.id.iv_large_select;
      ImageView ivLargeSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivLargeSelect == null) {
        break missingId;
      }

      id = R.id.iv_medium_select;
      ImageView ivMediumSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivMediumSelect == null) {
        break missingId;
      }

      id = R.id.iv_small_select;
      ImageView ivSmallSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivSmallSelect == null) {
        break missingId;
      }

      id = R.id.iv_super_select;
      ImageView ivSuperSelect = ViewBindings.findChildViewById(rootView, id);
      if (ivSuperSelect == null) {
        break missingId;
      }

      id = R.id.ll_font_large;
      FrameLayout llFontLarge = ViewBindings.findChildViewById(rootView, id);
      if (llFontLarge == null) {
        break missingId;
      }

      id = R.id.ll_font_normal;
      FrameLayout llFontNormal = ViewBindings.findChildViewById(rootView, id);
      if (llFontNormal == null) {
        break missingId;
      }

      id = R.id.ll_font_small;
      FrameLayout llFontSmall = ViewBindings.findChildViewById(rootView, id);
      if (llFontSmall == null) {
        break missingId;
      }

      id = R.id.ll_font_super;
      FrameLayout llFontSuper = ViewBindings.findChildViewById(rootView, id);
      if (llFontSuper == null) {
        break missingId;
      }

      id = R.id.note_bg_color_selector;
      LinearLayout noteBgColorSelector = ViewBindings.findChildViewById(rootView, id);
      if (noteBgColorSelector == null) {
        break missingId;
      }

      id = R.id.note_edit_list;
      LinearLayout noteEditList = ViewBindings.findChildViewById(rootView, id);
      if (noteEditList == null) {
        break missingId;
      }

      id = R.id.note_edit_view;
      NoteEditText noteEditView = ViewBindings.findChildViewById(rootView, id);
      if (noteEditView == null) {
        break missingId;
      }

      id = R.id.note_title;
      LinearLayout noteTitle = ViewBindings.findChildViewById(rootView, id);
      if (noteTitle == null) {
        break missingId;
      }

      id = R.id.sv_note_edit;
      LinearLayout svNoteEdit = ViewBindings.findChildViewById(rootView, id);
      if (svNoteEdit == null) {
        break missingId;
      }

      id = R.id.text_num;
      TextView textNum = ViewBindings.findChildViewById(rootView, id);
      if (textNum == null) {
        break missingId;
      }

      id = R.id.tv_alert_date;
      TextView tvAlertDate = ViewBindings.findChildViewById(rootView, id);
      if (tvAlertDate == null) {
        break missingId;
      }

      id = R.id.tv_modified_date;
      TextView tvModifiedDate = ViewBindings.findChildViewById(rootView, id);
      if (tvModifiedDate == null) {
        break missingId;
      }

      return new NoteEditBinding((FrameLayout) rootView, addImgBtn, btnSetBgColor, fontSizeSelector,
          ivAlertIcon, ivBgBlue, ivBgBlueSelect, ivBgGreen, ivBgGreenSelect, ivBgRed, ivBgRedSelect,
          ivBgWhite, ivBgWhiteSelect, ivBgYellow, ivBgYellowSelect, ivLargeSelect, ivMediumSelect,
          ivSmallSelect, ivSuperSelect, llFontLarge, llFontNormal, llFontSmall, llFontSuper,
          noteBgColorSelector, noteEditList, noteEditView, noteTitle, svNoteEdit, textNum,
          tvAlertDate, tvModifiedDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
